name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      
      - name: Lint with clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
      
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose
  
  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: x86_64-unknown-linux-gnu
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Build API Handler
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --package api-handler
      
      - name: Build Event Processor
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --package event-processor
      
      - name: Build Performance Calculator
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --package performance-calculator
      
      - name: Create deployment package
        run: |
          mkdir -p dist
          cp target/release/api-handler dist/bootstrap
          cd dist && zip -r ../api-handler.zip bootstrap
          cd ..
          
          cp target/release/event-processor dist/bootstrap
          cd dist && zip -r ../event-processor.zip bootstrap
          cd ..
          
          cp target/release/performance-calculator dist/bootstrap
          cd dist && zip -r ../performance-calculator.zip bootstrap
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: lambda-functions
          path: |
            api-handler.zip
            event-processor.zip
            performance-calculator.zip 